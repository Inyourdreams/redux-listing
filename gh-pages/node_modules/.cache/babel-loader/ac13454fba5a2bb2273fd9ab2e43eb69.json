{"ast":null,"code":"var _jsxFileName = \"/home/digtrannee/Desktop/react-redux-mobile/client/src/components/ListingPage/ListingPage.js\";\nimport React, { useState } from 'react';\nimport './ListingPage.css';\nimport MovieList from './CONTENTLISTINGPAGE-PAGE1.json';\nimport Loader from 'react-loader-spinner';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { connect } from 'react-redux';\n\nconst ListingPage = props => {\n  // const [ind, setInd] = useState(0)\n  // const fetchNextData = () => {\n  //   setInd(ind++)\n  //   return fetch(`/CONTENTLISTINGPAGE-PAGE${ind}.json`)\n  // }\n  // fetchNextData().then(d => console.log(d))\n  return React.createElement(\"div\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(InfiniteScroll, {\n    hasChildren: true,\n    hasMore: false,\n    loader: React.createElement(\"div\", {\n      className: \"scroll-loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"#68edd4\",\n      height: 80,\n      width: 80,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })),\n    endMessage: React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"You've seen it all\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex flex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, MovieList.page['content-items'].content.map((item, idx) => React.createElement(\"div\", {\n    key: idx,\n    className: \"w-1/3 h-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    key: idx,\n    src: require(\"../../Slices/\".concat(item['poster-image'])),\n    alt: item.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"listing-item-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, item.name))))));\n};\n\nconst mapStateToProps = state => {\n  idx: state.listing.idx;\n\n  listingData: state.listing.listingData;\n};\n\nconst mapDispatchToProps = {\n  setListingData\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ListingPage);","map":{"version":3,"sources":["/home/digtrannee/Desktop/react-redux-mobile/client/src/components/ListingPage/ListingPage.js"],"names":["React","useState","MovieList","Loader","InfiniteScroll","connect","ListingPage","props","page","content","map","item","idx","require","name","mapStateToProps","state","listing","listingData","mapDispatchToProps","setListingData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B;AAEA;AACA;AACA;AACA;AAEA;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AACE,IAAA,WAAW,EAAE,IADf;AAEE,IAAA,OAAO,EAAE,KAFX;AAGE,IAAA,MAAM,EACJ;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,KAAK,EAAC,SAA/B;AAAyC,MAAA,MAAM,EAAE,EAAjD;AAAqD,MAAA,KAAK,EAAE,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJJ;AAQE,IAAA,UAAU,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,SAAS,CAACM,IAAV,CAAe,eAAf,EAAgCC,OAAhC,CAAwCC,GAAxC,CAA4C,CAACC,IAAD,EAAOC,GAAP,KAC3C;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,SAAS,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,GAAG,EAAEC,OAAO,wBAAiBF,IAAI,CAAC,cAAD,CAArB,EAFd;AAGE,IAAA,GAAG,EAAEA,IAAI,CAACG,IAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCH,IAAI,CAACG,IAA1C,CANF,CADD,CADH,CAdF,CADF,CADF;AA+BD,CAzCD;;AA2CA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/BJ,EAAAA,GAAG,EAAEI,KAAK,CAACC,OAAN,CAAcL,GAAd;;AACLM,EAAAA,WAAW,EAAEF,KAAK,CAACC,OAAN,CAAcC,WAAd;AACd,CAHD;;AAKA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA;AADyB,CAA3B;AAIA,eAAef,OAAO,CACpBU,eADoB,EAEpBI,kBAFoB,CAAP,CAGbb,WAHa,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport './ListingPage.css'\nimport MovieList from './CONTENTLISTINGPAGE-PAGE1.json'\nimport Loader from 'react-loader-spinner'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { connect } from 'react-redux'\n\nconst ListingPage = props => {\n  // const [ind, setInd] = useState(0)\n\n  // const fetchNextData = () => {\n  //   setInd(ind++)\n  //   return fetch(`/CONTENTLISTINGPAGE-PAGE${ind}.json`)\n  // }\n\n  // fetchNextData().then(d => console.log(d))\n\n  return (\n    <div className=\"main\">\n      <InfiniteScroll\n        hasChildren={true}\n        hasMore={false}\n        loader={\n          <div className=\"scroll-loader\">\n            <Loader type=\"ThreeDots\" color=\"#68edd4\" height={80} width={80} />\n          </div>\n        }\n        endMessage={\n          <p>\n            <b>You've seen it all</b>\n          </p>\n        }\n      >\n        <div className=\"flex flex-wrap\">\n          {MovieList.page['content-items'].content.map((item, idx) => (\n            <div key={idx} className=\"w-1/3 h-12\">\n              <img\n                key={idx}\n                src={require(`../../Slices/${item['poster-image']}`)}\n                alt={item.name}\n              />\n              <span className=\"listing-item-name\">{item.name}</span>\n            </div>\n          ))}\n        </div>\n      </InfiniteScroll>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  idx: state.listing.idx\n  listingData: state.listing.listingData\n}\n\nconst mapDispatchToProps = {\n  setListingData,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ListingPage)\n"]},"metadata":{},"sourceType":"module"}