{"ast":null,"code":"var _jsxFileName = \"/home/digtrannee/Desktop/react-redux-mobile/client/src/components/ListingPage/ListingPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ListingPage.css'; // import MovieList from './CONTENTLISTINGPAGE-PAGE1.json'\n\nimport Loader from 'react-loader-spinner';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { connect } from 'react-redux';\nimport { setListingData } from '../../modules/listingReducer';\n\nconst ListingPage = ({\n  setListingData,\n  listingData,\n  hasChildren,\n  idx\n}) => {\n  const fetchNextData = () => {\n    return axios(\"/CONTENTLISTINGPAGE-PAGE1.json\");\n  };\n\n  useEffect(async () => {\n    const data = await fetchNextData().then(res => res.data.page['content-items'].content);\n    console.log(data);\n    setListingData(data);\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(InfiniteScroll, {\n    hasChildren: true,\n    hasMore: false,\n    loader: React.createElement(\"div\", {\n      className: \"scroll-loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"#68edd4\",\n      height: 80,\n      width: 80,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })),\n    endMessage: React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"You've seen it all\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex flex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, listingData.length > 0 && listingData.map((item, idx) => React.createElement(\"div\", {\n    key: idx,\n    className: \"w-1/3 h-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    key: idx,\n    src: require(\"../../Slices/\".concat(item['poster-image'])),\n    alt: item.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"listing-item-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, item.name))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    idx: state.listing.idx,\n    listingData: state.listing.listingData,\n    hasMore: state.listing.hasMore\n  };\n};\n\nconst mapDispatchToProps = {\n  setListingData\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ListingPage);","map":{"version":3,"sources":["/home/digtrannee/Desktop/react-redux-mobile/client/src/components/ListingPage/ListingPage.js"],"names":["React","useState","useEffect","axios","Loader","InfiniteScroll","connect","setListingData","ListingPage","listingData","hasChildren","idx","fetchNextData","data","then","res","page","content","console","log","length","map","item","require","name","mapStateToProps","state","listing","hasMore","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,8BAA/B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAED,EAAAA,cAAF;AAAkBE,EAAAA,WAAlB;AAA+BC,EAAAA,WAA/B;AAA4CC,EAAAA;AAA5C,CAAD,KAAuD;AACzE,QAAMC,aAAa,GAAG,MAAM;AAC1B,WAAOT,KAAK,kCAAZ;AACD,GAFD;;AAIAD,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMW,IAAI,GAAG,MAAMD,aAAa,GAAGE,IAAhB,CACjBC,GAAG,IAAIA,GAAG,CAACF,IAAJ,CAASG,IAAT,CAAc,eAAd,EAA+BC,OADrB,CAAnB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEAN,IAAAA,cAAc,CAACM,IAAD,CAAd;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AACE,IAAA,WAAW,EAAE,IADf;AAEE,IAAA,OAAO,EAAE,KAFX;AAGE,IAAA,MAAM,EACJ;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,KAAK,EAAC,SAA/B;AAAyC,MAAA,MAAM,EAAE,EAAjD;AAAqD,MAAA,KAAK,EAAE,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJJ;AAQE,IAAA,UAAU,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,WAAW,CAACW,MAAZ,GAAqB,CAArB,IACCX,WAAW,CAACY,GAAZ,CAAgB,CAACC,IAAD,EAAOX,GAAP,KACd;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,SAAS,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,GAAG,EAAEY,OAAO,wBAAiBD,IAAI,CAAC,cAAD,CAArB,EAFd;AAGE,IAAA,GAAG,EAAEA,IAAI,CAACE,IAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCF,IAAI,CAACE,IAA1C,CANF,CADF,CAFJ,CAdF,CADF,CADF;AAgCD,CA9CD;;AAgDA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLf,IAAAA,GAAG,EAAEe,KAAK,CAACC,OAAN,CAAchB,GADd;AAELF,IAAAA,WAAW,EAAEiB,KAAK,CAACC,OAAN,CAAclB,WAFtB;AAGLmB,IAAAA,OAAO,EAAEF,KAAK,CAACC,OAAN,CAAcC;AAHlB,GAAP;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAG;AACzBtB,EAAAA;AADyB,CAA3B;AAIA,eAAeD,OAAO,CACpBmB,eADoB,EAEpBI,kBAFoB,CAAP,CAGbrB,WAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './ListingPage.css'\n// import MovieList from './CONTENTLISTINGPAGE-PAGE1.json'\nimport Loader from 'react-loader-spinner'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { connect } from 'react-redux'\nimport { setListingData } from '../../modules/listingReducer'\n\nconst ListingPage = ({ setListingData, listingData, hasChildren, idx }) => {\n  const fetchNextData = () => {\n    return axios(`/CONTENTLISTINGPAGE-PAGE1.json`)\n  }\n\n  useEffect(async () => {\n    const data = await fetchNextData().then(\n      res => res.data.page['content-items'].content,\n    )\n    console.log(data)\n\n    setListingData(data)\n  }, [])\n\n  return (\n    <div className=\"main\">\n      <InfiniteScroll\n        hasChildren={true}\n        hasMore={false}\n        loader={\n          <div className=\"scroll-loader\">\n            <Loader type=\"ThreeDots\" color=\"#68edd4\" height={80} width={80} />\n          </div>\n        }\n        endMessage={\n          <p>\n            <b>You've seen it all</b>\n          </p>\n        }\n      >\n        <div className=\"flex flex-wrap\">\n          {listingData.length > 0 &&\n            listingData.map((item, idx) => (\n              <div key={idx} className=\"w-1/3 h-12\">\n                <img\n                  key={idx}\n                  src={require(`../../Slices/${item['poster-image']}`)}\n                  alt={item.name}\n                />\n                <span className=\"listing-item-name\">{item.name}</span>\n              </div>\n            ))}\n        </div>\n      </InfiniteScroll>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    idx: state.listing.idx,\n    listingData: state.listing.listingData,\n    hasMore: state.listing.hasMore,\n  }\n}\n\nconst mapDispatchToProps = {\n  setListingData,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ListingPage)\n"]},"metadata":{},"sourceType":"module"}